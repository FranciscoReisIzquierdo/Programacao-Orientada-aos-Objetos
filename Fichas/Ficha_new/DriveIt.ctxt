#BlueJ class context
comment0.target=DriveIt
comment1.params=nomeComparador\ cv
comment1.target=void\ addComparador(java.lang.String,\ java.util.Comparator)
comment10.params=
comment10.target=int\ quantos()
comment11.params=marca
comment11.target=int\ quantos(java.lang.String)
comment12.params=cod
comment12.target=Veiculo\ getVeiculo(java.lang.String)
comment13.params=v
comment13.target=void\ adiciona(Veiculo)
comment14.params=cod\ classificacao
comment14.target=void\ classificaVeiculo(java.lang.String,\ int)
comment14.text=public\ List<Veiculo>\ getVeiculos(){\n\ \ \ \ \ \ \ \ return\ this.viaturas\n}
comment15.params=cod
comment15.target=int\ custoRealKm(java.lang.String)
comment16.params=
comment16.target=Veiculo\ veiculoMaisBarato()
comment17.params=
comment17.target=Veiculo\ veiculoMaisUtilizado()
comment18.params=
comment18.target=void\ colocaEmpresaEmPromocao()
comment19.params=
comment19.target=java.util.Set\ ordernarVeiculos()
comment2.params=nomeComparador\ cv
comment2.target=java.util.Comparator\ getComparador(java.lang.String,\ java.util.Comparator)
comment20.params=
comment20.target=java.util.Map\ porMarca_Modelo()
comment20.text=\n\ \ \ \ public\ List<Veiculo>\ ordernarVeiculosL(){\n\ \ \ \ \ \ \ \ return\ this.viaturas.values().stream().map(Veiculo\:\:clone).sorted().collet(Collectors.toList());\n}
comment3.params=
comment3.target=DriveIt()
comment4.params=nome\ viatura
comment4.target=DriveIt(java.lang.String,\ java.util.Map)
comment5.params=d
comment5.target=DriveIt(DriveIt)
comment6.params=
comment6.target=java.lang.String\ getNome()
comment7.params=
comment7.target=java.util.Map\ getViaturas()
comment8.params=
comment8.target=DriveIt\ clone()
comment9.params=cod
comment9.target=boolean\ existeVeiculo(java.lang.String)
numComments=21
